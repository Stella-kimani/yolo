apiVersion: v1
kind: Namespace
metadata:
  name: yolo

---
# MongoDB Secret (Enhanced)
apiVersion: v1
kind: Secret
metadata:
  name: mongo-secret
  namespace: yolo
type: Opaque
data:
  username: YWRtaW4=        # base64('admin')
  password: YWRtaW4xMjM=    # base64('admin123')

---
# MongoDB StatefulSet (Optimized)
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: stella-mongo
  namespace: yolo
spec:
  serviceName: stella-mongo
  replicas: 1
  selector:
    matchLabels:
      app: stella-mongo
  template:
    metadata:
      labels:
        app: stella-mongo
    spec:
      containers:
      - name: mongo
        image: mongo:5.0
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: password
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1"
            memory: "2Gi"
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
  volumeClaimTemplates:
  - metadata:
      name: mongo-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: "10Gi"

---
# MongoDB Service
apiVersion: v1
kind: Service
metadata:
  name: stella-mongo
  namespace: yolo
spec:
  clusterIP: None
  selector:
    app: stella-mongo
  ports:
    - port: 27017
      targetPort: 27017

---
# Backend Deployment (Enhanced)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stella-backend
  namespace: yolo
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: stella-backend
  template:
    metadata:
      labels:
        app: stella-backend
    spec:
      containers:
      - name: backend
        image: kstella377/stella-yolo-backend:v1.0.3
        ports:
        - containerPort: 5000
        env:
        - name: MONGODB_URI
          value: "mongodb://$(MONGO_USERNAME):$(MONGO_PASSWORD)@stella-mongo:27017/yolo?authSource=admin&retryWrites=true&w=majority&connectTimeoutMS=30000"
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: username
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-secret
              key: password
        - name: NODE_ENV
          value: "production"
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "1"
            memory: "1Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 45
          periodSeconds: 15
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3

---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: stella-backend-service
  namespace: yolo
spec:
  type: ClusterIP
  selector:
    app: stella-backend
  ports:
    - port: 80
      targetPort: 5000

---
# Frontend Deployment (Optimized)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stella-frontend
  namespace: yolo
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: stella-frontend
  template:
    metadata:
      labels:
        app: stella-frontend
    spec:
      containers:
      - name: frontend
        image: kstella377/stella-yolo-client:v1.0.3
        ports:
        - containerPort: 80
        env:
        - name: BACKEND_URL
          value: "http://stella-backend-service.yolo.svc.cluster.local"
        - name: NODE_ENV
          value: "production"
        resources:
          requests:
            cpu: "250m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3

---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: stella-frontend-service
  namespace: yolo
spec:
  type: LoadBalancer
  selector:
    app: stella-frontend
  ports:
    - port: 80
      targetPort: 80
